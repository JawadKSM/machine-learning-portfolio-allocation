library(shiny); runApp('~/Desktop/MLV2/Shiny/Machine_Learning_Project/ML.R')
runApp('MLV2shiny.R')
runApp('MLV2shiny.R')
runApp('MLV2shiny.R')
runApp('MLV2shiny.R')
runApp('MLV2shiny.R')
runApp('MLV2shiny.R')
source("~/Desktop/MLV2/Shiny/Machine_Learning_Project/V2 shiny/MLV2shiny.R")
# UI
ui <- dashboardPage(
skin = "red",
dashboardHeader(title = span("emlyon RF Backtest", style = "font-weight: bold; color: #ffffff")),
dashboardSidebar(
sidebarMenu(
menuItem("Backtest Dashboard", tabName = "dashboard", icon = icon("chart-line")),
menuItem("About", tabName = "about", icon = icon("info-circle"))
),
br(),
h4("Parameters", align = "center", style = "color: white"),
dateRangeInput("backtest_range", "Backtest Period:",
start = min(spx_features$date),
end = max(spx_features$date),
min = min(spx_features$date),
max = max(spx_features$date)),
dateInput("train_start", "Training Start Date:",
value = min(spx_features$date),
min = min(spx_features$date),
max = max(spx_features$date)),
sliderInput("num_trees", "Number of Trees:", min = 5, max = 500, value = 100, step = 5),
actionBttn("run", "Launch Backtest", style = "fill", color = "danger", icon = icon("play"), block = TRUE),
br(),
helpText("This may take a few seconds.", style = "color:white;text-align:center;")
),
dashboardBody(
tags$head(tags$style(HTML(".skin-red .main-header .logo { background-color: #d90429; }
.skin-red .main-header .navbar { background-color: #d90429; }
.skin-red .main-sidebar { background-color: #2f2f2f; }"))),
tabItems(
tabItem(tabName = "dashboard",
fluidRow(
tabBox(width = 12,
tabPanel("Cumulative Return", plotlyOutput("cumulativePlot", height = "400px")),
tabPanel("Monthly Return", plotlyOutput("monthlyPlot", height = "400px")),
tabPanel("Sharpe Ratio", plotlyOutput("sharpePlot", height = "400px")),
tabPanel("Return Distribution", plotlyOutput("distributionPlot", height = "400px"))
)
),
fluidRow(
box(title = "Top Stocks", width = 6, status = "danger", solidHeader = TRUE, plotlyOutput("selectionPlot")),
box(title = "Feature Importance", width = 6, status = "danger", solidHeader = TRUE, plotlyOutput("importancePlot"))
),
fluidRow(
box(title = "Performance Metrics", width = 12, status = "danger", solidHeader = TRUE, DTOutput("performanceTable"))
)
),
tabItem(tabName = "about",
box(title = "About this App", width = 12, status = "danger", solidHeader = TRUE,
"This dashboard allows backtesting of a Random Forest strategy on SPX stock data.")
)
)
)
)
library(shiny); runApp('MLV2shiny.R')
runApp('MLV2shiny.R')
library(shiny); runApp('MLV2shiny.R')
library(shiny); runApp('Jawad_KASSIMI_Machine_Learning_Project.R')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
